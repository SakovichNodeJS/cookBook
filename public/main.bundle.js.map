{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/recipe-info.component.html","webpack:///./src/app/recipe-list.component.html","webpack:///./src/app/recipe.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/recipe-info.component.ts","webpack:///./src/app/recipe-list.component.ts","webpack:///./src/app/recipe.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 150\n// module chunks = 1","module.exports = \"\\n\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 151\n// module chunks = 1","module.exports = \"    <h1>{{recipe.recipe_name}}</h1>\\n    <div>{{recipe.cook_Time}}</div>\\n    <ul>\\n      <li *ngFor='let line of recipe.ingredients.split(\\\",\\\") '>\\n          {{line}}\\n      </li>\\n    </ul>\\n    <button (click)='location.back()'>Back</button>\\n<router-outlet></router-outlet>\\n<!-- Шаблон html страницы,отображающий подробную информацию о рецепте -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/recipe-info.component.html\n// module id = 152\n// module chunks = 1","module.exports = \"<h1>Recipes book</h1>\\n<ul>\\n  <li *ngFor='let recipe of recipes'>\\n    <div>recipe id : {{recipe._id}}</div>\\n    <div>{{recipe.recipe_name}}</div>\\n    <div>{{recipe.cook_Time}}</div>\\n    <button (click)='navigate(recipe._id)'>more info</button>\\n  </li>\\n</ul>\\n<router-outlet></router-outlet>\\n<!-- шаблон для отображения списка всех рецептов -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/recipe-list.component.html\n// module id = 153\n// module chunks = 1","import {Http, Response} from '@angular/http';\nimport {Observable} from 'rxjs/Rx';\nimport {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Recipe } from './recipe';\n\n//Делаем необходимые импорты\n\n\n\n//Обязательная аннотация для сервиса\n@Injectable()\nexport class RecipeService {\n\n//подключаем Http модуль для общения с сервером\n  constructor(private http: Http) {\n  }\n\n//Адрес ,по которому клиент будет отправлять запрос\n  private recipeUrl = '/recipes';\n\n//Метод,отвечающий за получение списка всех рецептов(для главной страницы).\n  getRecipes(): Observable<Recipe[]> {\n    return this.http.get(this.recipeUrl)\n      .map((res: Response) => res.json());\n      //Метод возвращает список рецептов в json формате\n  }\n\n  getRecipeById(id:String):Observable<Recipe>{\n    return this.http.get(this.recipeUrl+'/'+id)\n    .map((res:Response)=>res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 84;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 84\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component,OnInit } from '@angular/core';\nimport {RecipeService} from './recipe.service';\nimport {Recipe} from './recipe';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport {RecipeInfoComponent} from './recipe-info.component';\n\nimport {RecipeService} from './recipe.service';\nimport {RecipeListComponent} from './recipe-list.component';\n\n//Навигация клиента angular2\nconst appRoutes: Routes = [\n  //При адресе \"localhost:3000/recipes вызывается компонент AppComponent\n  { path: 'recipes', component: RecipeListComponent },\n  //При адресе \"localhost:3000/ происходит перенаправление на localhost:3000/recipes\n  { path: '',\n    redirectTo: '/recipes',\n    pathMatch: 'full'\n  },\n  { path:'recipes/:id',component: RecipeInfoComponent},\n];\n// Файл предназначен для подключения компонентов,чтобы клиент знал,что использовать.\n\n@NgModule({\n  declarations: [\n    //ТУТ список компонентов,которые написал пользователь вручную(кроме AppComponent)\n    AppComponent,\n    RecipeListComponent,\n    RecipeInfoComponent,\n  ],\n  //Здесь импортируются стандартные классы,которые предоставляет angular2\n  imports: [\n    //Подключаем навигацию\n    RouterModule.forRoot(appRoutes),\n    //Стандартные импорты,сделанные angular-cli при генерации проекта.\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  //Сюда записываются пользовательские сервисы\n  providers: [RecipeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component,OnInit } from '@angular/core';\nimport {RecipeService} from './recipe.service';\nimport {Recipe} from './recipe';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\n\n\n// Директива обьявляющая класс компонентом.\n@Component({\n  // с помощью селектора можно использовать компонент в html странице. (например <recipe-info></recipe-info>)\n  selector: 'recipe-info',\n  //ссылка на шаблон html страницы,который будет отображаться\n  templateUrl: './recipe-info.component.html',\n})\nexport class RecipeInfoComponent implements OnInit {\n\n// обьявляем пустой рецепт.\nrecipe:Recipe =new Recipe(-1,0,\"\",\"\");\n\n// коструктор для инициализации стандартных модулей(только которые используются)\nconstructor(private recipeService:RecipeService,\n  private activatedRoute:ActivatedRoute,\n  private location:Location){}\n\n// метод,срабатывающий автоматически при включении компонента\nngOnInit(){\n  // получаем значение параметра id\n  this.activatedRoute.params.subscribe((params)=>{\n    let param =params['id'];\n    // отправляем запрос на сервер по этому параметру\n    this.recipeService.getRecipeById(param).subscribe((res)=>{\n      // присваиваем пустому рецепту полученное значение.\n      this.recipe=res;\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe-info.component.ts","import { Component,OnInit } from '@angular/core';\nimport {RecipeService} from './recipe.service';\nimport {Recipe} from './recipe';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'recipe-list',\n  templateUrl: './recipe-list.component.html',\n  // styleUrls: []\n})\nexport class RecipeListComponent implements OnInit {\n\n// обьявляем пустой список рецептов\nrecipes:Recipe[]=new Array<Recipe>();\n\n// коструктор для инициализации стандартных модулей(только которые используются)\nconstructor(private recipeService:RecipeService,private router:Router){}\n\n// метод ,срабатывающий автоматически при включении компонента\nngOnInit(){\n  // отправляем запрос на сервер\n  this.recipeService.getRecipes().subscribe((res)=>{\n    // присваиваем пустому списку полученное значение\n    this.recipes=res;\n  })\n}\n\n// метод,срабатывающий при нажатии кнопки more info. Перенаправляет на страницу localhost:3000/recipes/:id - id какое-то значение\nnavigate(id:String){\n  this.router.navigate(['/recipes/'+id]);\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe-list.component.ts","export class Recipe{\n  constructor(public _id:Number,public cooking_Time:Number,\n  public recipe_name:String,\n  public ingredients:String){};\n}\n\n// Модель,идентичная модели в базе данных.\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}